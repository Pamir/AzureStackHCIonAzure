{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain"
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "corp.contoso.com",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created"

            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "The DNS prefix for the public IP address used by the Load Balancer"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_E8s_v4",
            "metadata": {
                "description": "Size of the VM that supports Nested virtualization"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "dcVM",
            "metadata": {
                "description": "Virtual machine name."
            }
        },
        "privateIPAddress": {
            "type": "string",
            "defaultValue": "10.0.0.4",
            "metadata": {
                "description": "Private IP address for Azure VM, will be used as DNS address for vNet."
            }
        },
        "virtualNetworkAddressRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual network address range."
            }
        },
        "subnetRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnet IP range."
            }
        },
        "vmStoreDiskSize": {
            "type": "int",
            "defaultValue": 512,
            "metadata": {
                "description": "Azure VM additional disk size for hosting Azure Stack HCI VMs amount in GB"
            }
        },
        "azsHCIHostCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "How many Azure Stack HCI nested hosts to be created within the Azure VM."
            }
        },
        "azsHCIHostMemory": {
            "type": "int",
            "defaultValue": 16,
            "metadata": {
                "description": "Azure Stack HCI memory amount in GB"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "for branch selection leave master if you are not the contributor and developing the ARM template"
            }
        }
    },
    "variables": {
        "dscUri": "[concat('https://github.com/yagmurs/AzureStackHCIonAzure/raw/', parameters('branch'), '/DSC/AzureStackHCIHost.zip')]",
        "_artifactsLocation": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/active-directory-new-domain/",
        "networkSecurityGroupName": "[concat(parameters('virtualMachineName'),'-nsg')]",
        "publicIpAddressName": "[concat(parameters('virtualMachineName'),'-pip')]",
        "virtualNetworkName": "[concat(parameters('virtualMachineName'),'-vnet')]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'),'-nic')]",
        "subnetName": "[concat(parameters('virtualMachineName'),'-subnet')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "VNet",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('nestedtemplates/vnet.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('subnetRange')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "VNet",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('privateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }                
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },        
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkInterfaceName')]"
            ],
            "properties": {
                "licenseType": "Windows_Server",
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'),'_OSDisk')]",
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('virtualMachineName'), '_DataDisk1')]",
                            "caching": "ReadWrite",
                            "createOption": "Empty",
                            "diskSizeGB": 20,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "lun": 0
                        },
                                                {
                            "name": "[concat(parameters('virtualMachineName'), '_DataDisk2')]",
                            "caching": "ReadWrite",
                            "createOption": "Empty",
                            "diskSizeGB": "[parameters('vmStoreDiskSize')]",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "lun": 1
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2019-07-01",
                    "name": "AzureStackHCIHost",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[parameters('virtualMachineName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[variables('dscUri')]",
                            "ConfigurationFunction": "AzureStackHCIHost.ps1\\AzureStackHCIHost",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                },
                                "azsHostCount": "[parameters('azsHCIHostCount')]",
                                "azsHCIHostMemory": "[parameters('azsHCIHostMemory')]",
                                "branch": "[parameters('branch')]"
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "UpdateVNetDNS",
            "dependsOn": [
                "AzureStackHCIHost"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('nestedtemplates/vnet-with-dns-server.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('subnetRange')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[parameters('privateIPAddress')]"
                        ]
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "dscUri": {
            "type": "string",
            "value": "[variables('dscUri')]"
        },
        "branch": {
            "type": "string",
            "value": "[parameters('branch')]"
        }    
    }
}